---
const { title, subtitle, videoUrl, description, buttonText, buttonLink } = Astro.props;

// Función para reproducir/pausar el video
const togglePlay = (event) => {
  event.stopPropagation();
  const card = event.currentTarget.closest('.card');
  const video = card.querySelector('video');
  if (!video) return;
  if (video.paused) {
    video.play();
  } else {
    video.pause();
  }
};
---

<div class="card">
  <video muted loop playsinline>
    <source src={videoUrl} type="video/mp4" />
    Tu navegador no soporta video.
  </video>

  <!-- botón de play/pause centrado -->
  <button class="play-button" onClick={togglePlay}>▶</button>

  <div class="overlay">
    <div class="overlay-card">
        <h2>{title}</h2>
        <h3>{subtitle}</h3>
        <p>{description}</p>
        <a href={buttonLink}>{buttonText}</a>
    </div>
  </div>
</div>

<style>
  .card {
    position: relative;
    width: 100%;
    height: 450px;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0,0,0,.3);
    margin: 1rem auto;
    cursor: pointer;
  }

  /* video como fondo */
  .card video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
  }

  /* botón de play/pause en el centro */
  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 3;
    background: rgba(0,0,0,0.5);
    border: none;
    color: #fff;
    font-size: 2.5rem;
    padding: 0.5rem 1rem;
    border-radius: 50%;
    cursor: pointer;
    transition: background 0.3s;
  }

  .play-button:hover {
    background: rgba(0,0,0,0.8);
  }

  /* overlay de texto */
  .overlay {
    position: relative;
    z-index: 2;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    background: linear-gradient(to top, rgba(0,0,0,0.7) 30%, rgba(0,0,0,0) 100%);
    color: #fff;
    padding: 0 10px;
    pointer-events: none; /* clicks pasan al botón */
  }

  .overlay-card{
    padding: 10px;
    display: flex;
    flex-direction: column;
  }

  .overlay h2, .overlay h3, .overlay p, .overlay a {
    pointer-events: auto; /* elementos interactivos siguen clickeables */
  }

  h2 {
    margin: 0 0 .3rem;
    font-size: 1.5rem;
    font-weight: bolder;
    color: white;
  }
  h3 {
    margin: 0 0 .5rem;
    font-size: 1rem;
    font-weight: normal;
    color: #ddd;
  }
  p {
    font-size: .9rem;
    margin: 0 0 1rem;
    line-height: 1.4;
    color: #eee;
  }

  a {
    align-self: flex-end;
    display: inline-block;
    padding: .6rem 1.2rem;
    border-radius: 8px;
    background: #ffcc00;
    color: #000;
    font-weight: bold;
    text-decoration: none;
    transition: background .3s;
  }

  a:hover {
    background: #e6b800;
  }
</style>
